(*
 * Copyright (c) 2015-2016 David Sheets <sheets@alum.mit.edu>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 *)

let buf = Buffer.create 1024

let () = try while true do
      let line = input_line stdin in
      Buffer.add_string buf line;
      Buffer.add_char buf '\n';
    done with End_of_file -> ()

let host = Sys_stat.Host.of_string (Buffer.contents buf)

let () = print_endline "(* Generated by sys-stat-srcgen *)\n"

open Printf

let () = print_endline "let file_kind = Sys_stat.File_kind.(Host.of_defns {"

let file_kind_defns = Sys_stat.(File_kind.Host.to_defns host.Host.file_kind)
let () =
  let open Sys_stat.File_kind in
  let { mask; dir; chr; blk; reg; fifo; lnk; sock } = file_kind_defns in
  printf "  mask = %d;\n" mask;
  printf "  dir  = %d;\n" dir;
  printf "  chr  = %d;\n" chr;
  printf "  blk  = %d;\n" blk;
  printf "  reg  = %d;\n" reg;
  printf "  fifo = %d;\n" fifo;
  printf "  lnk  = %d;\n" lnk;
  printf "  sock = %d;\n" sock

let () = print_endline "})\n"

let () = print_endline "let file_perm = Sys_stat.File_perm.(Host.of_defns {"

let file_perm_defns = Sys_stat.(File_perm.Host.to_defns host.Host.file_perm)
let () =
  let open Sys_stat.File_perm in
  let { rwxu; rwxg; rwxo; suid; sgid; svtx; access_mask; full_mask } =
    file_perm_defns
  in
  printf "  rwxu = %d;\n" rwxu;
  printf "  rwxg = %d;\n" rwxg;
  printf "  rwxo = %d;\n" rwxo;
  printf "  suid = %d;\n" suid;
  printf "  sgid = %d;\n" sgid;
  printf "  svtx = %d;\n" svtx;
  printf "  access_mask = %d;\n" access_mask;
  printf "  full_mask = %d;\n" full_mask

let () = print_endline "})\n"

let () = print_endline "let at = Sys_stat.At.(Host.of_defns {"

let at_defns = Sys_stat.(At.Host.to_defns host.Host.at)
let () =
  let open Sys_stat.At in
  let { symlink_nofollow } = at_defns in
  printf "  symlink_nofollow = %d;\n" symlink_nofollow

let () = print_endline "})\n"


let () = print_endline "let host = {"
let () = print_endline "  Sys_stat.Host.file_kind;"
let () = print_endline "  Sys_stat.Host.file_perm;"
let () =
  print_endline "  mode = Sys_stat.Mode.Host.({ file_kind; file_perm; });"
let () =
  print_endline "  at;"
let () = print_endline "}"
